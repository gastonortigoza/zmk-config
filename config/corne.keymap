/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        menorigual: menorigual {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GREATER_THAN>;
            label = "MENORIGUAL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E  &kp R  &kp T        &kp Y      &kp U          &kp I      &kp O    &kp P          &kp SQT
&kp TAB     &kp A  &kp S  &kp D  &kp F  &kp G        &kp H      &kp J          &kp K      &kp L    &kp SEMICOLON  &kp DELETE
&kp LSHFT   &kp Z  &kp X  &kp C  &kp V  &kp B        &kp N      &kp M          &kp COMMA  &kp DOT  &kp FSLH       &kp LA(RIGHT_ALT)
                          &mo 1  &mo 2  &kp ENTER    &kp SPACE  &kp BACKSPACE  &kp RCTRL
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp NUMBER_1     &kp NUMBER_2      &kp NUMBER_3          &kp NUMBER_4    &kp N5       &kp NUMBER_6    &kp N7           &kp N8             &kp N9                 &kp N0            &kp NON_US_BACKSLASH  &kp PIPE
&kp LEFT_BRACE   &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp LESS_THAN   &kp PLUS     &kp EQUAL       &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &kp GREATER_THAN  &kp DOUBLE_QUOTES     &kp UNDERSCORE
&kp EXCLAMATION  &kp AT_SIGN       &kp HASH              &kp DOLLAR      &kp PERCENT  &kp CARET       &kp AMPS         &kp ASTRK          &kp TILDE              &kp GRAVE         &kp QUESTION          &trans
                                                         &kp UNDERSCORE  &kp MINUS    &kp PLUS        &kp EQUAL        &kp X              &kp KP_DIVIDE
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp F1    &kp F2     &kp F3     &kp F4     &kp F5         &kp F6          &kp F7          &kp F8          &kp F9        &kp F10          &kp F11       &kp F12
&kp HOME  &kp LC(A)  &kp LC(C)  &kp LC(F)  &kp LEFT_ALT   &kp LEFT_WIN    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &bt BT_SEL 1  &bt BT_SEL 2
&kp END   &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)      &kp LCTRL       &trans          &trans          &trans        &trans           &bt BT_SEL 0  &bt BT_CLR
                                &kp TAB    &kp BACKSPACE  &kp DELETE      &kp INS         &kp CAPS        &trans
            >;
        };
    };
};
